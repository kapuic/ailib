[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "ailib"
description = "Simple AI workflow & agent library for Python."
readme = "README.md"
authors = [
  {name = "Kapui Cheung", email = "dev@kapui.net"}
]
maintainers = [
  {name = "Kapui Cheung", email = "dev@kapui.net"}
]
classifiers = [

]
license = {text = "MIT"}
dependencies = [
  "typer",
  "openai>=1.0.0",
  "pydantic>=2.0.0",
  "httpx>=0.25.0",
  "tiktoken>=0.5.0",
  "rich>=13.0.0",
]
requires-python = ">= 3.10"

dynamic = ["version"]

[project.optional-dependencies]
test = [
    "coverage",  # testing
    "pytest",  # testing
    "pytest-asyncio",  # async testing
    "pytest-mock",  # mocking
    "ruff",  # linting
    "mypy",  # type checking
    "types-python-dateutil",  # type stubs
    "nbval",  # notebook validation
]

dev = [
    "ipython",  # interactive shell
    "jupyter",  # notebooks
    "black",  # formatting
    "isort",  # import sorting
]

tracing = [
    "opentelemetry-api",
    "opentelemetry-sdk",
    "opentelemetry-exporter-otlp",
]

anthropic = [
    "anthropic>=0.20.0",  # Anthropic Claude SDK
]

ollama = [
    "ollama-python>=0.1.0",  # Ollama local models
]

all-providers = [
    "anthropic>=0.20.0",
    "ollama-python>=0.1.0",
]

[project.urls]

bugs = "https://github.com/kapuic/ailib/issues"
changelog = "https://github.com/kapuic/ailib/blob/master/changelog.md"
homepage = "https://github.com/kapuic/ailib"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.package-data]
"*" = ["*.*"]

[project.scripts]
ailib = "ailib.cli:app"

[tool.setuptools.dynamic]
version = {attr = "ailib.__version__"}

[tool.ty]
# All rules are enabled as "error" by default; no need to specify unless overriding.
# Example override: relax a rule for the entire project (uncomment if needed).
# rules.TY015 = "warn"  # For invalid-argument-type, warn instead of error.

# Optional: Per-directory overrides for flexibility in boilerplates with tests or examples.
[[tool.ty.overrides]]
match = ["tests/**.py"]
rules.TY016 = "ignore"  # Ignore invalid-assignment in tests, e.g., for dynamic fixtures.
rules.TY029 = "ignore"  # Ignore invalid-return-type in tests.

[tool.black]
# Using Black's default line length of 88 (Pythonic best practice)
# No configuration needed - Black's defaults are perfect!

[tool.isort]
profile = "black"

[tool.ruff]
# Using Black's default line length
line-length = 88

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # Pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
]

[tool.pytest.ini_options]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
testpaths = ["tests"]
# Separate notebook validation to avoid running by default
# Run with: pytest --nbval examples/tutorials/
